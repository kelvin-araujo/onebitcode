@charset 'UTF-8';

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

.container {
  background-color: darkgray;
  min-height: 100vh;
  display: flex;
  gap: 0px 15px;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
  
}

.item {
  background-color: white;
  width: 200px;
  height: 200px;
  border: 2px solid black;
  font-size: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
}



/*
- display: flex;  --> Deixa os itens com alinhamento horizontal ou em linha

- flex-direction; --> Deixa os itens em coluna ou em linha (column / row ). é possível usar o reverse para inverter os itens de trás para frente ( reverse )

- row-gap; --> Define o espaçamento entre os itens em linha

- column-gap; --> Define o espaçamento entre os itens em coluna

- gap; --> Define o espaçamento em linha e coluna ( shorthand )

- justify-content --> alinhamento do flex container na horizontal. center = centraliza flex-start = início / flex-end = final / space-around = os itens ficam com o mesmo espaço na direita e esquerda / space-between = deixa todos os itens mais separados possíveis / space-evenly = deixa todos os espaçamentos iguais

- align-items; --> alinhamento do flex container na vertical. Possui as mesmas propriedade de centralizar os items no meio, final e início. Possui a propriedade stretch que estica os itens na vertical

- align-content --> alinha as linhas de um container flex quando há espaço extra no eixo cruzado.

- flex-wrap; --> quebra os itens para caber na tela quando ela é reduzida. Podemos usar o reverse para quebrar os itens de trás para frente
*/